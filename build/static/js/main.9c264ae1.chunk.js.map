{"version":3,"sources":["components/Nav.js","components/Article.js","components/ArticleEntry.js","firebaseConfig.js","services/authService.js","services/articleService.js","components/App.js","index.js"],"names":["Nav","articles","setArticle","map","a","onClick","title","id","Article","article","className","date","body","ArticleEntry","addArticle","useState","setTitle","setBody","error","setError","onSubmit","e","preventDefault","trim","value","onChange","target","rows","type","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAnalytics","getAuth","db","getFirestore","SignIn","signInWithPopup","GoogleAuthProvider","SignOut","currentUser","displayName","signOut","data","Timestamp","mow","addDoc","collection","docRef","getDocs","query","orderBy","limit","snapshot","docs","doc","App","setArticles","writing","setWriting","user","setUser","useEffect","onAuthStateChanged","useAuthentication","fetchArticles","then","createArticle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c264ae1.chunk.js","sourcesContent":["export default function Nav({ articles, setArticle }) {\r\n  return (\r\n    <nav>\r\n      {!articles\r\n        ? \"No articles\"\r\n        : articles.map((a) => (\r\n            <p key={a.id} onClick={() => setArticle(a)}>\r\n              {a.title}\r\n            </p>\r\n          ))}\r\n    </nav>\r\n  );\r\n}\r\n","export default function Article({ article }) {\r\n  return (\r\n    <article>\r\n      {!article ? (\r\n        <p>No article selected</p>\r\n      ) : (\r\n        <section>\r\n          <h2>{article.title}</h2>\r\n          <p className=\"date\">{`Posted: ${article.date}`}</p>\r\n          <p className=\"body\">{article.body}</p>\r\n        </section>\r\n      )}\r\n    </article>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\n\r\nexport default function ArticleEntry({ addArticle }) {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [body, setBody] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n\r\n  function submit(e) {\r\n    setError(null);\r\n    e.preventDefault();\r\n    if (!title.trim() || !body.trim()) {\r\n      setError(\"Both the title and body must be supplied\");\r\n    } else {\r\n      addArticle({ title, body });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={submit}>\r\n        {error && <p className=\"error\">{error}</p>}\r\n        Title\r\n        <input value={title} onChange={(e) => setTitle(e.target.value)} />\r\n        Body\r\n        <textarea\r\n          rows=\"8\"\r\n          value={body}\r\n          onChange={(e) => setBody(e.target.value)}\r\n        ></textarea>\r\n        <button type=\"submit\">Create</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBNk7St3sf3l61Rhiao-zZ8pjOHoQDKL6I\",\r\n  authDomain: \"blog-817af.firebaseapp.com\",\r\n  projectId: \"blog-817af\",\r\n  storageBucket: \"blog-817af.appspot.com\",\r\n  messagingSenderId: \"43243525777\",\r\n  appId: \"1:43243525777:web:8ee02d07e8953d6a1f9130\",\r\n  measurementId: \"G-9G3QGZBDGQ\"\r\n};\r\n\r\n// Initialize Firebase\r\nexport const app = initializeApp(firebaseConfig);\r\nexport const analytics = getAnalytics(app);\r\nexport const auth = getAuth(app);\r\nexport const db = getFirestore(app);","import { useState, useEffect } from \"react\";\r\nimport { signInWithPopup, GoogleAuthProvider, signOut } from \"@firebase/auth\";\r\nimport { auth } from \"../firebaseConfig\";\r\n\r\nexport function SignIn() {\r\n    return <button onClick={() => signInWithPopup(auth, new GoogleAuthProvider())}>Sign In</button>\r\n}\r\n\r\nexport function SignOut() {\r\n    return (\r\n        <div>\r\n            Hello, {auth.currentUser.displayName} &nbsp;\r\n            <button onClick={()=> signOut(auth)}>Sign Out</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function useAuthentication(){\r\n    const [ user, setUser ] = useState(null)\r\n    useEffect(() => {\r\n        return auth.onAuthStateChanged((user) => {user ? setUser(user) : setUser(null)\r\n        })\r\n    }, [])\r\n    return user\r\n}","// This service completely hides the data store from the rest of the app.\r\n// No other part of the app knows how the data is stored. If anyone wants\r\n// to read or write data, they have to go through this service.\r\n\r\n// For this starter code, we use mock data, that is, data in memory that\r\n// is pretty arbitrary. The service functions to create and fetch articles\r\n// will just work on this fake data in memory.\r\n\r\n// This intent is for you to fork this starter code and then replace the\r\n// bodies of the service functions with code that fetches from a *real*\r\n// database like Firebase Firestore.\r\nimport { db } from \"../firebaseConfig\"\r\nimport { collection, query, getDocs, addDoc, orderBy, limit, Timestamp} from \"firebase/firestore\"\r\n\r\nexport async function createArticle({ title, body }) {\r\n  const data = {title, body, date: Timestamp.mow() }\r\n  const docRef = await addDoc(collection(db, \"articles\"), data)\r\n  return { id: docRef.id, ...data }\r\n}\r\n\r\nexport async function fetchArticles() {\r\n  const snapshot = await getDocs(\r\n    query(collection(db, \"articles\"), orderBy(\"date\", \"desc\"), limit(20))\r\n  )\r\n  return snapshot.docs.map((doc) => ({\r\n    id: doc.id,\r\n    ... doc.data(),\r\n  }))\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport Nav from \"./Nav\";\r\nimport Article from \"./Article\";\r\nimport ArticleEntry from \"./ArticleEntry\";\r\nimport { SignIn, SignOut, useAuthentication } from \"../services/authService\";\r\nimport { fetchArticles, createArticle } from \"../services/articleService\";\r\nimport \"./App.css\";\r\n\r\nexport default function App() {\r\n  const [articles, setArticles] = useState([]);\r\n  const [article, setArticle] = useState(null);\r\n  const [writing, setWriting] = useState(null);\r\n  const user = useAuthentication()\r\n\r\n  // This is a trivial app, so just fetch all the articles once, when\r\n  // the app is loaded. A real app would do pagination. Note that\r\n  // \"fetchArticles\" is what gets the articles from the service and\r\n  // then \"setArticles\" writes them into the React state.\r\n  useEffect(() => {\r\n    if(user){\r\n      fetchArticles().then(setArticles);\r\n    }\r\n  }, [user]);\r\n\r\n  // Update the \"database\" *then* update the internal React state. These\r\n  // two steps are definitely necessary.\r\n  function addArticle({ title, body }) {\r\n    createArticle({ title, body }).then((article) => {\r\n      setArticle(article);\r\n      setArticles([article, ...articles]);\r\n      setWriting(false);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header>\r\n        Blog \r\n        {user && <button onClick={() => setWriting(true)}>New Article</button>}\r\n        {!user ? <SignIn /> : <SignOut />}\r\n      </header>\r\n\r\n      {!user ? \"\" : <Nav articles={articles} setArticle={setArticle} />}\r\n      \r\n      {!user ? (\r\n        \"\"\r\n      ) : writing ? (\r\n        <ArticleEntry addArticle={addArticle} />\r\n      ) : (\r\n        <Article article={article} />\r\n      )}\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}